<?php

require_once __DIR__ . '/../vendor/autoload.php';

use PHPEpub\EpubBuilder;

try {
    echo "üìö Ejemplo de Subjects/Materias en PHPEpub\n";
    echo "========================================\n\n";

    // Crear un libro con m√∫ltiples subjects
    $epub = new EpubBuilder();
    
    $epub->setTitle('Manual de PHP Avanzado')
         ->setAuthor('Carlos Mendoza')
         ->setLanguage('es')
         ->setDescription('Manual completo de PHP para desarrolladores intermedios y avanzados')
         ->setIsbn('978-84-5678-901-2')
         // Agregar subjects uno por uno
         ->addSubject('PHP')
         ->addSubject('Programaci√≥n')
         ->addSubject('Desarrollo Web')
         ->addSubject('Backend')
         ->addSubject('OOP')
         ->addSubject('Bases de Datos')
         ->addSubject('Framework')
         ->addSubject('Laravel')
         ->addSubject('Symfony');

    // Tambi√©n se pueden agregar subjects como array
    $moreSubjects = ['API', 'REST', 'GraphQL', 'Microservicios', 'Docker'];
    $epub->setSubjects(array_merge($epub->getMetadata()->getSubjects(), $moreSubjects));

    echo "üìñ Creando libro con subjects:\n";
    $subjects = $epub->getMetadata()->getSubjects();
    foreach ($subjects as $index => $subject) {
        echo "   " . ($index + 1) . ". {$subject}\n";
    }
    echo "\n";

    // Agregar cap√≠tulos
    $epub->addChapter(
        'Introducci√≥n a PHP Moderno',
        '<h1>Introducci√≥n a PHP Moderno</h1>
        <p>Este manual cubre las caracter√≠sticas m√°s avanzadas de PHP 8.3+.</p>
        
        <h2>Subjects/Materias de este libro</h2>
        <p>Este libro est√° categorizado bajo las siguientes materias:</p>
        <ul>
            <li><strong>PHP</strong> - Lenguaje de programaci√≥n principal</li>
            <li><strong>Programaci√≥n</strong> - Conceptos generales de desarrollo</li>
            <li><strong>Desarrollo Web</strong> - Aplicaciones web modernas</li>
            <li><strong>Backend</strong> - Desarrollo del lado del servidor</li>
            <li><strong>OOP</strong> - Programaci√≥n orientada a objetos</li>
            <li><strong>Bases de Datos</strong> - Manejo de datos persistentes</li>
            <li><strong>Framework</strong> - Uso de marcos de trabajo</li>
            <li><strong>Laravel</strong> - Framework PHP popular</li>
            <li><strong>Symfony</strong> - Components y framework</li>
            <li><strong>API</strong> - Desarrollo de interfaces de programaci√≥n</li>
            <li><strong>REST</strong> - Arquitectura de servicios web</li>
            <li><strong>GraphQL</strong> - Lenguaje de consulta para APIs</li>
            <li><strong>Microservicios</strong> - Arquitectura distribuida</li>
            <li><strong>Docker</strong> - Containerizaci√≥n de aplicaciones</li>
        </ul>
        
        <p>Los subjects ayudan a:</p>
        <ul>
            <li>üìÇ <strong>Categorizar</strong> el contenido del libro</li>
            <li>üîç <strong>Facilitar b√∫squedas</strong> en bibliotecas digitales</li>
            <li>üìö <strong>Organizar colecciones</strong> por temas</li>
            <li>üéØ <strong>Mejorar SEO</strong> en tiendas digitales</li>
            <li>üìä <strong>An√°lisis estad√≠stico</strong> de contenido</li>
        </ul>'
    );

    $epub->addChapter(
        'Caracter√≠sticas Avanzadas de PHP',
        '<h1>Caracter√≠sticas Avanzadas de PHP</h1>
        
        <h2>Enums en PHP 8.1+</h2>
        <pre><code>enum Status: string {
    case PENDING = "pending";
    case APPROVED = "approved"; 
    case REJECTED = "rejected";
}</code></pre>

        <h2>Match Expression</h2>
        <pre><code>$result = match($status) {
    Status::PENDING =&gt; "En proceso",
    Status::APPROVED =&gt; "Aprobado",
    Status::REJECTED =&gt; "Rechazado"
};</code></pre>

        <h2>Readonly Properties</h2>
        <pre><code>class User {
    public readonly string $id;
    public readonly string $email;
    
    public function __construct(string $id, string $email) {
        $this->id = $id;
        $this->email = $email;
    }
}</code></pre>'
    );

    // Mostrar informaci√≥n sobre subjects antes de generar
    echo "üìã Verificando metadata:\n";
    $metadata = $epub->getMetadata();
    echo "   üìñ T√≠tulo: {$metadata->getTitle()}\n";
    echo "   üë§ Autor: {$metadata->getAuthor()}\n";
    echo "   üåç Idioma: {$metadata->getLanguage()}\n";
    echo "   üìö Subjects: " . count($metadata->getSubjects()) . " categor√≠as\n";
    
    // Verificar si tiene subjects espec√≠ficos
    $checkSubjects = ['PHP', 'Laravel', 'Docker', 'Python'];
    echo "\nüîç Verificando subjects espec√≠ficos:\n";
    foreach ($checkSubjects as $subject) {
        $hasSubject = $metadata->hasSubject($subject);
        $status = $hasSubject ? '‚úÖ' : '‚ùå';
        echo "   {$status} {$subject}\n";
    }

    // Generar el EPUB
    $filename = 'manual-php-avanzado-subjects.epub';
    echo "\nüìö Generando EPUB: {$filename}\n";
    
    if ($epub->save($filename)) {
        echo "‚úÖ ¬°Libro generado exitosamente!\n";
        echo "üì¶ Archivo: {$filename}\n";
        echo "üìä Tama√±o: " . number_format(filesize($filename) / 1024, 2) . " KB\n";
        
        echo "\nüéØ Los subjects se incluyen autom√°ticamente en:\n";
        echo "   üìÑ Metadata del package OPF\n";
        echo "   üîç Informaci√≥n de b√∫squeda\n";
        echo "   üìö Cat√°logos de bibliotecas digitales\n";
        echo "   üè™ Tiendas de ebooks\n";
        
    } else {
        echo "‚ùå Error al generar el libro\n";
    }

} catch (Exception $e) {
    echo "‚ùå Error: " . $e->getMessage() . "\n";
    echo "üìç L√≠nea: " . $e->getLine() . "\n";
    echo "üìÇ Archivo: " . $e->getFile() . "\n";
}

echo "\nüéâ Ejemplo de subjects completado.\n";
